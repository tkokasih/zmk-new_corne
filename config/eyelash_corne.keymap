#define ZMK_POINTING_DEFAULT_MOVE_VAL 800  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <600>;
    acceleration-exponent = <1>;
};

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        L2-3U {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <17 3>;
        };

        R2-3U {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <23 9>;
        };

        L2-4 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 14>;
        };

        R2-4 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <23 26>;
        };

        R2-L2 {
            bindings = <&kp SQT>;
            key-positions = <17 23>;
        };

        R3-L3 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "colemak";
            bindings = <
&kp ESC       &kp Q               &kp W           &kp F            &kp P             &kp G                             &kp UP                &kp J        &kp L              &kp U                &kp Y              &kp SEMI                 &kp BSPC
&kp LEFT_GUI  &kp A               &lt 3 R         &lt 4 S          &kp T             &kp D                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp N              &lt 4 E              &lt 3 I            &kp O                    &kp SQT
&kp LCTRL     &mt LEFT_CONTROL Z  &mt LEFT_ALT X  &mt LEFT_GUI C   &mt LEFT_SHIFT V  &kp B      &kp SPACE              &kp DOWN              &kp K        &mt RIGHT_SHIFT M  &mt RIGHT_GUI COMMA  &mt RIGHT_ALT DOT  &mt RIGHT_CONTROL SLASH  &kp ESC
                                                  &lt 2 BACKSPACE  &kp LSHIFT        &lt 5 TAB                                               &lt 3 ENTER  &lt 1 SPACE        &lt 3 ESC
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&bt BT_SEL 1  &none            &none           &mmv MOVE_UP    &none            &none                                          &mmv MOVE_UP                     &trans           &none            &none            &none            &none      &trans
&trans        &none            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mmv MOVE_LEFT   &msc SCRL_DOWN   &msc SCRL_UP     &mmv MOVE_RIGHT  &mkp LCLK  &trans
&trans        &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans          &trans           &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &mkp RCLK  &trans
                                               &trans          &trans           &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        nav {
            display-name = "nav";
            bindings = <
&bootloader  &trans  &kp ESC  &trans  &trans  &trans                                 &mmv MOVE_UP                     &kp ESC   &kp BSPC   &kp ESC    &kp DEL    &kp ESC      &trans
&trans       &trans  &trans   &trans  &trans  &kp TAB                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp TAB      &trans
&trans       &trans  &trans   &trans  &trans  &trans       &trans                    &mmv MOVE_DOWN                   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp LS(TAB)  &trans
                              &trans  &trans  &bootloader                                                             &kp RET   &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        num {
            display-name = "num";
            bindings = <
&studio_unlock  &trans                &kp LEFT_PARENTHESIS  &kp ASTERISK          &kp AMPERSAND               &none                                 &mmv MOVE_UP                     &kp PLUS   &kp N7        &kp N8  &kp N9  &none    &bootloader
&trans          &trans                &kp CARET             &kp PERCENT           &kp DOLLAR                  &none                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp N4        &kp N5  &kp N6  &kp DOT  &none
&trans          &mt LEFT_CONTROL SQT  &mt LEFT_ALT HASH     &mt LEFT_WIN AT_SIGN  &mt LEFT_SHIFT EXCLAMATION  &none   &kp C_MUTE                    &mmv MOVE_DOWN                   &kp MINUS  &kp N1        &kp N2  &kp N3  &kp N0   &none
                                                            &trans                &trans                      &trans                                                                 &trans     &kp NUMBER_0  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        sym {
            bindings = <
&trans  &trans  &kp RIGHT_BRACE        &kp LEFT_BRACE        &trans     &trans                    &trans          &trans         &kp EXCLAMATION  &kp SQT            &kp GRAVE         &trans    &trans
&trans  &trans  &kp RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp LSHFT  &trans            &trans  &trans  &trans  &kp LESS_THAN  &kp MINUS        &kp EQUAL          &kp GREATER_THAN  &kp SEMI  &trans
&trans  &trans  &kp RBKT               &kp LBKT              &trans     &trans  &trans            &trans          &trans         &kp UNDERSCORE   &kp DOUBLE_QUOTES  &kp QUESTION      &kp BSLH  &trans
                                       &trans                &trans     &trans                                    &trans         &trans           &trans
            >;
        };

        fn {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
